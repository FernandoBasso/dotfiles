snippet log "console.log"
console.log($1);
endsnippet

snippet cl "console log abbrev"
console.log('$1', $2);
endsnippet

snippet cl= "console log ==="
console.log('=== $1', $2);
endsnippet

snippet defl "def console.log abbrev"
const l = console.log.bind(console);
endsnippet

snippet ll "l(...)"
l('==== $1', $2);
endsnippet

snippet ccl "console.log to use inside pipe or compose"
const ccl = label => obj => { console.log(label, obj); return obj; }
endsnippet

snippet deflog "define console.log/info/warn/err"
const log = console.log.bind(console);
const info = console.info.bind(console);
const warn = console.warn.bind(console);
const err = console.error.bind(console);
endsnippet

snippet jdesc "jest describe() block"
describe('${1:test description}', () => {
  $2
});
endsnippet

snippet jit "jest it() test"
it('${1:test description}', () => {
  $2
});
endsnippet

snippet jtest "jest test() test"
it('${1:test description}', () => {
  $2
});
endsnippet

##
# Make a snippet like:
#
#   const [loading, setLoading] = useState(false);
#            $1        $1                    $2
#
# Note it capitalizes "l" in for "setLoading". Very handy!
#
snippet useState "const [f, g] = useState();"
const [$1, set${1/\w+/\u$0/g}] = useState(${2:initial state});
endsnippet

snippet rh "renderHook()"
const { result } = renderHook(() => use$1($2));

expect(result.current$3)$4
endsnippet

snippet act "react act()"
act(() => {
  $1
});
endsnippet

snippet /tw "// @TODO @WORKING"
// @TODO @WORKING
endsnippet


snippet *tw "// @TODO @WORKING"
/*
 * @TODO @WORKING
 */
endsnippet

snippet vntthen "description"
Vue.nextTick()
  .then(() => {
    $1
  });
endsnippet

snippet imp "named import statement single line"
import { $2 } from '$1';
endsnippet

snippet impnl "named import multiple lines"
import {
  $2
} from '$1';
endsnippet

##
# Create a function declaration and does a named export of it.
#
snippet expf "Create and name-export single function"
function $1() {
  ${2:// Code goes here...}
}

export { $1 };
endsnippet

##
# For a particular case where I want all my .mjs files to
# have a vim textwidth=72 modeline.
#
snippet algomjs "algorithm file mjs module"

$1


//
// vim: set tw=72:
//
endsnippet
